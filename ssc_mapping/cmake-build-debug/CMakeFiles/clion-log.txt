/home/mansoor/Development/CLion-2020.3/clion-2020.3/bin/cmake/linux/bin/cmake -DCMAKE_BUILD_TYPE=Debug -G "CodeBlocks - Unix Makefiles" /Data/simulations/catkin_ws/src/ssc_3d_planning/ssc_mapping
-- The C compiler identification is GNU 9.3.0
-- The CXX compiler identification is GNU 9.3.0
-- Check for working C compiler: /usr/bin/cc
-- Check for working C compiler: /usr/bin/cc - works
-- Detecting C compiler ABI info
-- Detecting C compiler ABI info - done
-- Detecting C compile features
-- Detecting C compile features - done
-- Check for working CXX compiler: /usr/bin/c++
-- Check for working CXX compiler: /usr/bin/c++ - works
-- Detecting CXX compiler ABI info
-- Detecting CXX compiler ABI info - done
-- Detecting CXX compile features
-- Detecting CXX compile features - done
-- Using CATKIN_DEVEL_PREFIX: /Data/simulations/catkin_ws/src/ssc_3d_planning/ssc_mapping/cmake-build-debug/devel
-- Using CMAKE_PREFIX_PATH: /Data/simulations/catkin_ws/devel;/opt/ros/noetic
-- This workspace overlays: /Data/simulations/catkin_ws/devel;/opt/ros/noetic
-- Found PythonInterp: /home/mansoor/anaconda3/bin/python3 (found suitable version "3.8.5", minimum required is "3") 
-- Using PYTHON_EXECUTABLE: /home/mansoor/anaconda3/bin/python3
-- Using Debian Python package layout
-- Found PY_em: /home/mansoor/anaconda3/lib/python3.8/site-packages/em.py  
-- Using empy: /home/mansoor/anaconda3/lib/python3.8/site-packages/em.py
-- Using CATKIN_ENABLE_TESTING: ON
-- Call enable_testing()
-- Using CATKIN_TEST_RESULTS_DIR: /Data/simulations/catkin_ws/src/ssc_3d_planning/ssc_mapping/cmake-build-debug/test_results
-- Forcing gtest/gmock from source, though one was otherwise available.
-- Found gtest sources under '/usr/src/googletest': gtests will be built
-- Found gmock sources under '/usr/src/googletest': gmock will be built
-- Found PythonInterp: /home/mansoor/anaconda3/bin/python3 (found version "3.8.5") 
-- Found Threads: TRUE  
-- Using Python nosetests: /usr/bin/nosetests3
-- catkin 0.8.9
-- BUILD_SHARED_LIBS is on
-- Using these message generators: gencpp;geneus;genlisp;gennodejs;genpy
-- Preferred Protoc Executable: /usr/bin/protoc
-- Marking SHARED_LIBRARY "ssc_mapping" of package "ssc_mapping" for installation
-- Marking EXECUTABLE "ssc_mapping_node" of package "ssc_mapping" for installation
-- Marking HEADER FILES in "include" folder of package "ssc_mapping" for installation
-- Configuring done
-- Generating done
-- Build files have been written to: /Data/simulations/catkin_ws/src/ssc_3d_planning/ssc_mapping/cmake-build-debug
